basePath: /v1
definitions:
  orderRequest:
    properties:
      numbers:
        items:
          type: integer
        type: array
      productID:
        type: string
    required:
    - numbers
    - productID
    type: object
  raffleRaffle:
    properties:
      description:
        type: string
      id:
        type: string
      imageURL:
        type: string
      name:
        type: string
      quantity:
        type: integer
      slug:
        type: string
      sortedNumber:
        type: integer
      status:
        type: string
      unitPrice:
        type: integer
      userLimit:
        type: integer
      variation:
        items:
          $ref: '#/definitions/raffleVariation'
        type: array
    type: object
  raffleRequest:
    properties:
      description:
        type: string
      imageURL:
        type: string
      name:
        type: string
      quantity:
        type: integer
      unitPrice:
        type: integer
    required:
    - description
    - imageURL
    - name
    - quantity
    - unitPrice
    type: object
  raffleVariation:
    properties:
      id:
        type: string
      name:
        type: string
      number:
        type: integer
      status:
        type: string
    type: object
  skinItem:
    properties:
      icon_url:
        type: string
      market_hash_name:
        type: string
      name:
        type: string
    type: object
  skinSkin:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/skinItem'
        type: array
      steam_id:
        type: string
    type: object
  v1availableResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/raffleRaffle'
        type: array
    type: object
  v1doSteamRequest:
    properties:
      steam_id:
        type: string
    required:
    - steam_id
    type: object
  v1response:
    properties:
      error:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Microservice for Rifa
  title: Go Rifa Microservice
  version: "10"
paths:
  /order/:
    post:
      consumes:
      - application/json
      description: Create a Order
      operationId: do-post
      parameters:
      - description: Set up order
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/orderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1response'
      summary: Create
      tags:
      - order
  /raffle/:
    get:
      consumes:
      - application/json
      description: Show all available raffles
      operationId: getAll
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1availableResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1response'
      summary: Show raffles
      tags:
      - raffle
    post:
      consumes:
      - application/json
      description: Create a Raffle
      operationId: do-create
      parameters:
      - description: Set up raffle
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/raffleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1response'
      summary: Create
      tags:
      - raffle
  /raffle/:id:
    get:
      consumes:
      - application/json
      description: Show raffle by ID
      operationId: getbyID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1availableResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1response'
      summary: Show raffles
      tags:
      - raffle
  /steam/do-player-inventory:
    post:
      consumes:
      - application/json
      description: Create a Player Inventory
      operationId: do-player-inventory
      parameters:
      - description: set up steam
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1doSteamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/skinSkin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1response'
      summary: Create
      tags:
      - steam
swagger: "20"
